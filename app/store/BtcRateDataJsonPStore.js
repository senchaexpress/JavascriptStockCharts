/*
 * File: app/store/BtcRateDataJsonPStore.js
 *
 * This file was generated by Sencha Architect version 4.2.9.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.3.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.3.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Demo.store.BtcRateDataJsonPStore', {
    extend: 'Ext.data.Store',
    alias: 'store.BtcRateDataStore',

    alternateClassName: [
        'btcratedatastore'
    ],
    requires: [
        'Demo.model.HomeModel',
        'Ext.data.proxy.JsonP',
        'Ext.data.reader.Json',
        'Ext.data.field.Number',
        'Ext.data.field.String'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            storeId: 'BtcRateDataJsonPStore',
            model: 'Demo.model.HomeModel',
            proxy: {
                type: 'jsonp',
                cacheString: '\'\'',
                directionParam: '\'\'',
                extraParams: {
                    access_key: 'c611bbc77b83810b23b0871dca45fb7e',
                    symbols: 'AAPL',
                    date_from: '2021-03-31',
                    date_to: '2021-04-10',
                    limit: 1000
                },
                limitParam: '\'\'',
                pageParam: '\'\'',
                sortParam: '\'\'',
                startParam: '\'\'',
                url: 'https://api.marketstack.com/v1/eod',
                autoAppendParams: false,
                reader: {
                    type: 'json',
                    transform: function(data) {

                        console.log("data", data);
                        return data;
                    },
                    rootProperty: 'data',
                    successProperty: '\'\'',
                    totalProperty: '\'\''
                }
            },
            fields: [
                {
                    type: 'float',
                    name: 'high'
                },
                {
                    type: 'float',
                    name: 'low'
                },
                {
                    type: 'string',
                    name: 'date'
                },
                {
                    type: 'float',
                    name: 'close'
                },
                {
                    type: 'float',
                    name: 'open'
                }
            ]
        }, cfg)]);
    }
});