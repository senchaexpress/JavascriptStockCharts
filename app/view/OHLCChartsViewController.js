/*
 * File: app/view/OHLCChartsViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.9.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.3.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.3.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Demo.view.OHLCChartsViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.ohlccharts',

    updateUI: function(startDate, endDate, tickerType) {
        console.log(startDate, endDate, tickerType);
        if(!startDate || !endDate){
            startDate = '2020-01-01';
            endDate = '2020-12-31';
        }
        if(this.isVaildPeriod(startDate, endDate)) {
            var mycandlestickchart = Ext.ComponentQuery.query('#mycandlestickchart')[0];
            var store = mycandlestickchart.getStore();
            var marketstackStore = Ext.getStore("marketstackStore");

            marketstackStore.proxy.extraParams.date_from = startDate;
            marketstackStore.proxy.extraParams.date_to = endDate;
            marketstackStore.proxy.extraParams.symbols = tickerType;

            marketstackStore.load({
                scope:this,
                callback: function(records, operation, success) {
                    console.log("records", records);
                    store.setData(records);
                    console.log("getData", store.getData());
                }
            });
        }
    },

    isVaildPeriod: function(startDate, endDate) {
        startDate = new Date(startDate);
        endDate = new Date(endDate);

        if(startDate.getTime() > endDate.getTime()) {
            var temp = endDate;
            endDate = startDate;
            startDate = temp;
        }

        // console.log("endDate - startDate", endDate - startDate);

        var days = Math.round((endDate - startDate) / (24 * 3600 * 1000));
        // console.log("days", days);
        if(days > 1000 || days === 0) {
            Ext.Msg.alert('Alert', 'You can see only for a year(365days)', Ext.emptyFn);
            return false;
        } else {
            return true;
        }
    },

    initMarketStackStore: function() {
        Ext.create('Ext.data.Store', {
            id         : 'marketstackStore',
            model      : 'Demo.model.HomeModel',
            autoLoad   : true,
            autoDestroy: true,
            proxy: {
                type: 'rest',
                url : 'https://api.marketstack.com/v1/eod',
                useDefaultXhrHeader: false, // <= HERE
                extraParams: {
                    access_key: 'c611bbc77b83810b23b0871dca45fb7e',
                    symbols: 'AAPL',
                    date_from: '2021-03-31',
                    date_to: '2021-04-10',
                    limit: 1000
                },
                reader: {
                    type           : 'json',
                    headers: {'Accept': 'application/json'},
                    totalProperty  : 'total',
                    successProperty: 'success',
                    messageProperty: 'message',
                    transform: function(response){
                        // console.log("data", data);
                        var data = response.data.slice();
                        data = data.map((dataForDay) => {
        //                     console.log("before", dataForDay);
                            dataForDay.date = new Date(dataForDay.date).getTime();
        //                     console.log("after", dataForDay);
                            return dataForDay;
                        });
                        return data;
                    }
                }
            }, // <= and notice this change
            fields: [
                {
                    type: 'float',
                    name: 'high'
                },
                {
                    type: 'float',
                    name: 'low'
                },
                {
                    type: 'int',
                    name: 'date'
                },
                {
                    type: 'float',
                    name: 'close'
                },
                {
                    type: 'float',
                    name: 'open'
                }
            ]
        });
    },

    onRefreshBtnClick: function(button, e, eOpts) {
        var mycandlestickchart = Ext.ComponentQuery.query('#mycandlestickchart')[0];
        var fromDatePicker = Ext.ComponentQuery.query('#fromDatePicker')[0];
        var fromDate = fromDatePicker.value;

        var toDatePicker = Ext.ComponentQuery.query('#toDatePicker')[0];
        var toDate = toDatePicker.value;

        var tickerType = Ext.ComponentQuery.query('#tickerInput')[0].value;

        // console.log(":tickerType", tickerType);
        // console.log("Ext.ComponentQuery.query('#tickerInput')[0]", Ext.ComponentQuery.query('#tickerInput')[0]);

        if(fromDate && toDate) {
            fromDate = new Date(fromDate);
            toDate = new Date(toDate);

            if(fromDate > toDate) {
                var temp = toDate;
                toDate = fromDate;
                fromDate = temp;
            }

            fromDate = Ext.Date.format(fromDate, 'Y-m-d');
            toDate = Ext.Date.format(toDate, 'Y-m-d');

            this.updateUI(fromDate, toDate, tickerType);
        }
    },

    onPanelAfterRender: function(component, eOpts) {
        this.updateUI("2020-01-01", "2020-12-31", "AAPL");
    },

    onPanelRender: function(component, eOpts) {
        console.log("onPanelRender");
        this.chart = Ext.ComponentQuery.query('#mycandlestickchart')[0];
        this.initMarketStackStore();
    }

});
